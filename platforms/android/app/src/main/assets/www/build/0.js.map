{"version":3,"sources":["../../src/app/auth/auth.module.ts","../../src/app/shared/services/Load.service.ts","../../src/app/auth/shared/auth.forms.ts","../../src/app/auth/shared/auth.validation.patterns.ts","../../src/app/auth/auth.ts","../../src/app/auth/login-form/login-form.ts","../../src/app/auth/register/register-form.ts","../../src/app/auth/shared/match-other-validator.ts","../../src/app/auth/register/registration-steps.ts","../../src/app/auth/reset-password/reset-password.ts","../../src/app/auth/shared/auth.messages.ts","../../src/app/auth/shared/forms-data-service.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthPage } from './auth';\nimport { LoginFormComponent } from './login-form/login-form';\nimport { RegisterFormComponent } from './register/register-form';\nimport { ResetPasswordFormComponent } from './reset-password/reset-password';\nimport { FormsDataService } from './shared/forms-data-service';\nimport { LoadService } from \"../shared/services/Load.service\";\nimport {IonicStorageModule} from \"@ionic/storage\";\n\n@NgModule({\n  declarations: [\n    AuthPage,\n    LoginFormComponent,\n    ResetPasswordFormComponent,\n    RegisterFormComponent\n  ],\n  imports: [\n    IonicPageModule.forChild(AuthPage),\n    IonicStorageModule.forRoot(),\n    SharedModule,\n  ],\n  providers: [\n    FormsDataService,\n    LoadService\n  ]\n})\n\nexport class AuthPageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.module.ts","import { Injectable } from '@angular/core';\nimport { Loading, LoadingController } from 'ionic-angular';\n\n\n@Injectable()\nexport class LoadService {\n  loader: Loading;\n\n  constructor(private loadCtrl: LoadingController) {\n\n  }\n\n\n  start(msg?:string){\n    this.loader = this.loadCtrl.create({\n      content: 'Chargement ...',\n    });\n    if(msg){\n      this.loader.setContent(msg)\n    }\n    this.loader.present()\n  }\n  stop(){\n    if(this.loader){\n      this.loader.dismiss();\n    }\n  }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/Load.service.ts","export enum AuthForms {\n  LOGIN = 'login',\n  REGISTER = 'register',\n  RESET_PASSWORD = 'reset-password'\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/shared/auth.forms.ts","interface AuthValidationPatterns {\n  [pattern: string]: string | RegExp;\n}\n\nexport const authValidationPatterns: AuthValidationPatterns = {\n  \"email\": \"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,4}$\",\n  'cin': /^[0-9a-zA-Z]+$/,\n  'adherentNum': /^[0-9a-zA-Z]+$/,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/shared/auth.validation.patterns.ts","import { Component } from '@angular/core';\nimport { IonicPage } from 'ionic-angular';\nimport { AuthForms } from './shared/auth.forms';\n\n@IonicPage({\n  priority: 'high',\n  segment: 'auth',\n  name: 'auth',\n})\n@Component({\n  templateUrl: 'auth.html',\n})\nexport class AuthPage {\n  public authForms = AuthForms;\n  private displayedFrom = AuthForms.LOGIN;\n\n  displayForm(form: AuthForms) {\n    this.displayedFrom = form;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.ts","import { Component, EventEmitter, Injectable, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Storage } from '@ionic/storage';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { ErrorService } from '../../shared/services/error.service';\nimport { LoadService } from '../../shared/services/Load.service';\nimport { AuthForms } from '../shared/auth.forms';\nimport { authValidationPatterns } from '../shared/auth.validation.patterns';\n\n\n@Component({\n  selector: 'ba-login-form',\n  templateUrl: 'login-form.html',\n})\n\n@Injectable()\nexport class LoginFormComponent implements OnInit {\n  loginForm: FormGroup;\n  remember: boolean = false;\n  @Output() displayForm = new EventEmitter<AuthForms>();\n\n  constructor(private formBuilder: FormBuilder,\n              private auth: AuthService,\n              private errorService: ErrorService,\n              private loadService: LoadService,\n              private storage: Storage) {\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      'email': ['', [Validators.required, Validators.pattern(authValidationPatterns['email'])]],\n      'password': ['', [Validators.required, Validators.minLength(6)]],\n      'remember': false,\n    });\n\n    this.storage.get('email')\n      .then((email) => {\n        this.loginForm.patchValue({\n          'email': email,\n          'remember': !!email,\n        });\n      });\n  }\n\n  rememberMe() {\n    this.auth.setPersistence(this.loginForm.value.remember);\n    if (this.loginForm.value.remember) {\n      this.storage.set('email', this.loginForm.value.email);\n    }\n    else {\n      this.storage.set('email', null);\n    }\n  }\n\n  login() {\n    this.loadService.start();\n    return this.auth.loginWithEmail(this.loginForm.value.email, this.loginForm.value.password)\n      .then(() => {\n        this.loadService.stop();\n      })\n      .catch(error => {\n        this.errorService.handleError(error);\n        this.loadService.stop();\n      });\n  }\n\n  resetPassword() {\n    this.displayForm.emit(AuthForms.RESET_PASSWORD);\n  }\n\n  signUp() {\n    this.displayForm.emit(AuthForms.REGISTER);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/login-form/login-form.ts","import { Component, EventEmitter, Injectable, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Adherent } from '../../shared/models/adherent.model';\nimport { User } from '../../shared/models/user.model';\nimport { AdherentsDal } from '../../shared/services/adherents/adherents.dal';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { ErrorService } from '../../shared/services/error.service';\nimport { LoadService } from '../../shared/services/Load.service';\nimport { AuthForms } from '../shared/auth.forms';\nimport { authValidationPatterns } from '../shared/auth.validation.patterns';\nimport { matchOtherValidator } from '../shared/match-other-validator';\nimport { RegistrationSteps } from './registration-steps';\n\n@Component({\n  selector: 'ba-register-form',\n  templateUrl: 'register-form.html'\n})\n\n\n@Injectable()\nexport class RegisterFormComponent implements OnInit {\n  lastStep: boolean = false;\n  registrationSteps = RegistrationSteps;\n  currentStep: RegistrationSteps = this.registrationSteps.CIN;\n  registrationForm: FormGroup;\n  cinForm: FormControl;\n  adherentForm: FormControl;\n  adherentNumForm: FormControl;\n  emailForm: FormControl;\n  passwordForm: FormControl;\n  confirmPasswordForm: FormControl;\n  adherentsForCin: Adherent[] = [];\n  @Output() displayForm = new EventEmitter<AuthForms>();\n  private adherentSubscription: Subscription;\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthService,\n              private errorService: ErrorService,\n              private adherentsDal: AdherentsDal,\n              private loadService: LoadService) {\n  }\n\n  ngOnInit(): void {\n    this.cinForm = new FormControl('', [Validators.required, Validators.pattern(authValidationPatterns['cin'])]);\n    this.adherentForm = new FormControl('', [Validators.required]);\n    this.emailForm = new FormControl('', [Validators.required, Validators.pattern(authValidationPatterns['email'])]);\n    this.passwordForm = new FormControl('', [Validators.required, Validators.minLength(6)]);\n    this.confirmPasswordForm = new FormControl('', [Validators.required, matchOtherValidator('passwordForm')]);\n    this.adherentNumForm = new FormControl('', [Validators.required, Validators.pattern(authValidationPatterns['cin'])]);\n    this.registrationForm = this.formBuilder.group({\n      'cinForm': this.cinForm,\n      'adherentNumForm': this.adherentNumForm,\n      'adherentForm': this.adherentForm,\n      'emailForm': this.emailForm,\n      'passwordForm': this.passwordForm,\n      'confirmPasswordForm': this.confirmPasswordForm\n    });\n  }\n\n  nextStep(): void {\n    switch (this.currentStep) {\n      case RegistrationSteps.CIN: {\n        this.populateAdherents();\n        break;\n      }\n      case RegistrationSteps.AdherentSelection: {\n        this.currentStep = this.registrationSteps.ProfileCompletion;\n        this.lastStep = true;\n        break;\n      }\n      case RegistrationSteps.ProfileCompletion: {\n        this.registerNewUser();\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  previousStep(): void {\n    switch (this.currentStep) {\n      case RegistrationSteps.CIN: {\n        this.displayForm.emit(AuthForms.LOGIN);\n        break;\n      }\n      case RegistrationSteps.AdherentSelection: {\n        this.currentStep = this.registrationSteps.CIN;\n        break;\n      }\n      case RegistrationSteps.ProfileCompletion: {\n        this.currentStep = this.registrationSteps.AdherentSelection;\n        this.lastStep = false;\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  async registerNewUser() {\n    if (this.registrationForm.valid) {\n      this.loadService.start();\n      try {\n        let user: User = {\n          name: this.registrationForm.value.adherentForm.name,\n          id: this.registrationForm.value.adherentForm.id,\n          cin: this.registrationForm.value.cinForm,\n          email: this.registrationForm.value.emailForm,\n          adherentNum: this.registrationForm.value.adherentNumForm,\n        };\n        await this.authService.signUp(user, this.registrationForm.value.passwordForm);\n        this.displayForm.emit(AuthForms.LOGIN);\n      } catch (error) {\n        this.errorService.handleError(error);\n      }\n      this.loadService.stop();\n    }\n  }\n\n  registrationStepIsValid(): boolean {\n    switch (this.currentStep) {\n      case RegistrationSteps.CIN: {\n        return this.cinForm.valid;\n      }\n      case RegistrationSteps.AdherentSelection: {\n        return this.adherentForm.valid;\n      }\n      case RegistrationSteps.ProfileCompletion: {\n        return this.emailForm.valid && this.passwordForm.valid && this.confirmPasswordForm.valid\n          && this.passwordForm.value == this.confirmPasswordForm.value;\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n\n  compareByAdherentId(item1: Adherent, item2: Adherent) {\n    return item1.id === item2.id;\n  }\n\n  ngOnDestroy() {\n    if (this.adherentSubscription)\n      this.adherentSubscription.unsubscribe();\n  }\n\n  private populateAdherents() {\n    if (this.cinForm.valid) {\n      this.loadService.start();\n      this.adherentSubscription = this.adherentsDal.getAdherentsByCIN(this.cinForm.value, this.adherentNumForm.value).subscribe((value: Adherent[]) => {\n        this.adherentsForCin = value;\n        this.currentStep = this.registrationSteps.AdherentSelection;\n        this.loadService.stop();\n      }, reason => {\n        this.currentStep = this.registrationSteps.CIN;\n        this.errorService.handleError(reason);\n        this.loadService.stop();\n      });\n    }\n  }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/register/register-form.ts","import { FormControl } from '@angular/forms';\n\n\nexport function matchOtherValidator(otherControlName: string) {\n\n  let thisControl: FormControl;\n  let otherControl: FormControl;\n\n  return function matchOtherValidate(control: FormControl) {\n\n    if (!control.parent) {\n      return null;\n    }\n\n    // Initializing the validator.\n    if (!thisControl) {\n      thisControl = control;\n      otherControl = control.parent.get(otherControlName) as FormControl;\n      if (!otherControl) {\n        throw new Error('matchOtherValidator(): other control is not found in parent group');\n      }\n      otherControl.valueChanges.subscribe(() => {\n        thisControl.updateValueAndValidity();\n      });\n    }\n\n    if (!otherControl) {\n      return null;\n    }\n\n    if (otherControl.value !== thisControl.value) {\n      return {\n        matchOther: true,\n      };\n    }\n\n    return null;\n\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/shared/match-other-validator.ts","export enum RegistrationSteps {\n  CIN,\n  AdherentSelection,\n  ProfileCompletion\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/register/registration-steps.ts","import { Component, EventEmitter, Injectable, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Storage } from '@ionic/storage';\nimport { LoadingController } from 'ionic-angular';\nimport { AuthService } from '../../shared/services/auth.service';\nimport { ErrorService } from '../../shared/services/error.service';\nimport { LoadService } from '../../shared/services/Load.service';\nimport { ToastService } from '../../shared/services/toast.service';\nimport { AuthForms } from '../shared/auth.forms';\nimport { authMessages } from '../shared/auth.messages';\nimport { authValidationPatterns } from '../shared/auth.validation.patterns';\n\n\n@Component({\n  selector: 'ba-reset-password-form',\n  templateUrl: 'reset-password.html',\n})\n\n\n@Injectable()\nexport class ResetPasswordFormComponent implements OnInit {\n  resetPasswordForm: FormGroup;\n  @Output() displayForm = new EventEmitter<AuthForms>();\n\n  constructor(private formBuilder: FormBuilder,\n              private authService: AuthService,\n              private toastService: ToastService,\n              private errorService: ErrorService,\n              public loading: LoadingController,\n              private loadService: LoadService,\n              private storage: Storage) {\n  }\n\n\n  ngOnInit(): void {\n    this.resetPasswordForm = this.formBuilder.group({\n      'email': ['', [Validators.required, Validators.pattern(authValidationPatterns['email'])]],\n    });\n  }\n\n  resetPassword(): void {\n    this.loadService.start();\n    this.authService.resetPassword(this.resetPasswordForm.value.email)\n      .then(() => {\n        this.toastService.toast(authMessages['RESET_PASSWORD_MAIL_SENT']);\n        this.storage.set('email', this.resetPasswordForm.value.email);\n        this.displayForm.emit(AuthForms.LOGIN);\n        this.loadService.stop();\n\n      })\n      .catch((error) => {\n        this.errorService.handleError(error);\n        this.loadService.stop();\n\n      });\n  }\n\n  displayLoginForm(): void {\n    this.displayForm.emit(AuthForms.LOGIN);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/reset-password/reset-password.ts","interface ErrorMessages {\n  [code: string]: string;\n}\n\n\nexport const authMessages: ErrorMessages = {\n  \"RESET_PASSWORD_MAIL_SENT\": \"Un mail a été envoyé pour réinitialiser votre mot de passe\",\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/shared/auth.messages.ts","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class FormsDataService {\n\n  private emailAddress: string = '';\n\n  constructor() {\n  }\n\n  getEmailAddress(): string {\n    return this.emailAddress;\n  }\n\n  setEmailAddress(emailAddress: string): void {\n    this.emailAddress = emailAddress;\n  }\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/shared/forms-data-service.ts"],"sourceRoot":""}